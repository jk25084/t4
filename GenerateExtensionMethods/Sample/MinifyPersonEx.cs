using System;
using System.Linq;
namespace VivaLing.Models.Account
{
    public static class MinifyPersonEx
    {
        private static void MannuallyFrom(this VivaLing.Models.Account.MinifyPerson @this, VivaLing.Models.Account.Person target)
        {
            // customized mapping
        }

        private static void MannuallyTo(this VivaLing.Models.Account.MinifyPerson @this, VivaLing.Models.Account.Person target)
        {
            // customized mapping
        }

        public static VivaLing.Models.Account.MinifyPerson ToMinifyPerson(this VivaLing.Models.Account.Person source)
        {
            return new VivaLing.Models.Account.MinifyPerson().MapFrom(source);
        }

        public static VivaLing.Models.Account.Person ToPerson(this VivaLing.Models.Account.MinifyPerson derived)
        {
            return derived.MapTo(new VivaLing.Models.Account.Person());
        }

        public static MinifyPerson MapFrom(this MinifyPerson derived, Person source)
        {
            // this function is auto-generated by DerivedModel.tt
            // you can add your code in MannuallyFrom
            derived.Email = source.Email;
            derived.MajorRole = source.MajorRole;
            derived.Account = source.Account?.ToMinifyAccount();
            derived.Extensions = source.Extensions?.Select(VivaLing.Models.Account.MinifyPersonExtensionEx.ToMinifyPersonExtension).ToList();

            derived.MannuallyFrom(source);
            return derived;
        }

        public static Person MapTo(this MinifyPerson derived, Person source)
        {
            // this function is auto-generated by DerivedModel.tt
            // you can add your code in MannuallyTo
            source.Email = derived.Email;
            source.MajorRole = derived.MajorRole;
            source.Account = derived.Account?.ToAccount();
            source.Extensions = derived.Extensions?.Select(VivaLing.Models.Account.MinifyPersonExtensionEx.ToPersonExtension).ToList();

            derived.MannuallyTo(source);
            return source;
        }
    }
}
